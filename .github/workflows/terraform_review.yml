name: Terraform Module Review

on:
  workflow_call:
    inputs:
      runs-on:
        description: 'Where to run, usually ubuntu-latest or self-hosted'
        default: 'ubuntu-latest'
        required: false
        type: string

      tf_version:
        description: 'Terraform version to run'
        default: 'latest'
        required: false
        type: string

      tflint_version:
        description: 'TFLint version to run'
        default: 'latest'
        required: false
        type: string

      tflint_config_repo:
        description: 'Public Repo Where TFLint Config can be found'
        default: 'burib/tflint-configs'
        required: false
        type: string

      tflint_config_path:
        description: 'Path inside the Public Repo Where TFLint Config can be found'
        default: 'aws/.tflint.hcl'
        required: false
        type: string

      checkov_check:
        description: 'Comma-separated list of Checkov tests to perform'
        default: ''
        required: false
        type: string

      checkov_skip_check:
        description: 'Comma-separated list of Checkov tests to skip'
        default: ''
        required: false
        type: string

    secrets:
      GH_READ_ONLY_TOKEN:
        required: false # provide READ ONLY PAT if you use private Github repos as terraform code.

jobs:
  format:
    name: Format
    runs-on: ${{ inputs.runs-on }}

    steps:
      - name: Format Terraform Code
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ inputs.tf_version }}

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -recursive

      - name: Add & Commit
        uses: EndBug/add-and-commit@v9.1.0
        with:
          author_name: 'github-actions[bot] :robot:'
          author_email: 'github-actions[bot]@users.noreply.github.com'
          message: 'fix: terraform fmt'

  validate:
    name: Validate
    runs-on: ${{ inputs.runs-on }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ inputs.tf_version }}

      - name: Terraform version
        working-directory: ./${{ inputs.working_directory }}
        id: version
        run: terraform --version
        continue-on-error: false

      - name: 'set env variables'
        run: |
          IFS='/' read -ra GITHUB_REPOSITORY <<< ${{ github.repository }}
          echo "GITHUB_ORGANISATION_NAME=${GITHUB_REPOSITORY[0]}" >> $GITHUB_ENV
          echo "GITHUB_REPOSITORY_NAME=${GITHUB_REPOSITORY[1]}" >> $GITHUB_ENV

      - name: "Configure Github credentials"
        run: |
          git config --local --remove-section http."https://github.com/"
          git config --global url."https://cicd:${{ secrets.GH_READ_ONLY_TOKEN }}@github.com/".insteadOf "https://github.com/"

      - name: Terraform init
        id: init
        run: terraform init --backend=false
        continue-on-error: false

      - name: Terraform validate
        id: validate
        run: terraform validate
        continue-on-error: false

  tflint:
    name: "TFLint"
    runs-on: ${{ inputs.runs-on }}

    steps:
      - uses: actions/checkout@v3
        name: Checkout source code

      - uses: terraform-linters/setup-tflint@v2
        name: Setup TFLint
        with:
          tflint_version: ${{ inputs.tflint_version }}
      - uses: terraform-linters/tflint-load-config-action@v0
        with:
          source-repo: ${{ inputs.tflint_config_repo }}
          source-path: ${{ inputs.tflint_config_path }}

      - name: Show version
        run: tflint --version

      - name: Init TFLint
        run: tflint --init

      - name: Run TFLint
        run: tflint -f compact

  tfsec:
    name: TFSec
    runs-on: ${{ inputs.runs-on }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: tfsec
        uses: aquasecurity/tfsec-action@v1.0.2
        id: tfsec
        with:
          format: "default,sarif"
          additional_args: "--out tfsec_results.sarif"
        continue-on-error: true
      - name: "Upload tfsec SARIF file to github code scanning"
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: tfsec_results.sarif
        continue-on-error: true
      - name: "Check if TFSec Failed or not"
        if: steps.tfsec.outcome != 'success'
        run: echo "tfsec failed." && exit 1


  checkov:
    name: Checkov
    runs-on: ${{ inputs.runs-on }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: "Configure Github credentials"
        run: |
          git config --local --remove-section http."https://github.com/"
          git config --global url."https://cicd:${{ secrets.GH_READ_ONLY_TOKEN }}@github.com/".insteadOf "https://github.com/"

      - name: Run Checkov
        id: checkov
        uses: burib/checkov-action@upgrade-docker-image-version
        env:
          GH_READ_ONLY_TOKEN: ${{ secrets.GH_READ_ONLY_TOKEN }}
        with:
          check: ${{ inputs.checkov_check }}
          skip_check: ${{ inputs.checkov_skip_check }}
          soft_fail: false
          framework: terraform
          output_format: sarif # optional: the output format, one of: cli, json, junitxml, github_failed_only, or sarif. Default: sarif
          output_file_path: checkov_results.sarif # folder and name of results file
          download_external_modules: true
          github_pat: "GH_READ_ONLY_TOKEN"
          log_level: DEBUG
        continue-on-error: true

      - name: "Upload checkov SARIF file to github code scanning"
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: checkov_results.sarif
        continue-on-error: true
      - name: "Check if Checkov Failed or not"
        if: steps.tfsec.checkov != 'success'
        run: echo "checkov failed." && exit 1

  docs:
    name: Terraform Docs
    runs-on: ${{ inputs.runs-on }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Render terraform docs inside the README.md and push changes back to PR branch
        uses: terraform-docs/gh-actions@v1.0.0
        with:
          working-dir: .
          args: "--sort=false"
          output-file: README.md
          output-method: inject
          git-push: "true"
